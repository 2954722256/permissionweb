<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- context注解能被使用，多个bean的简写 -->
    <context:annotation-config />

    <!-- 启动注解驱动的spring mvc 功能 -->
    <mvc:annotation-driven/>

    <!-- http拦截器 -->
    <mvc:interceptors>
        <bean class="com.dodo.permission_web.common.HttpInterceptor" />
    </mvc:interceptors>

    <!-- 启动包扫描功能， controller和 service -->
    <context:component-scan base-package="com.dodo.permission_web.controller" />
    <context:component-scan base-package="com.dodo.permission_web.service" />


    <!-- 让mvc认识对应js，css，ace(assets) 等 文件，有对应的访问路径和权限 -->
    <!-- 应该是页面上/js/  ，对应 真实的 /js/**的位置 -->
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/css/" mapping="/css/**"/>
    <mvc:resources location="/bootstrap3.3.5/" mapping="/bootstrap3.3.5/**"/>
    <mvc:resources location="/assets/" mapping="/assets/**"/>


    <!-- 从 spring中拿到 对应的Bean 对象，帮助类， 对应的初始化， 非懒加载， 开始就加载 -->
    <bean class="com.dodo.permission_web.common.ApplicationContextHelper" lazy-init="false" />

    <!-- 对应的RequestMapping，可以找到对应的接口 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />

    <!-- 自己写的exception处理， .json, .page请求 对应Excpetion的处理逻辑 -->
    <bean class="com.dodo.permission_web.common.SpringExceptionResolver" />

    <!-- 对应的解析，例如，是json，还是jsp页面，或者下载文件 -->
    <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />

    <!-- 上面解析， 这里用json处理 -->
    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />

    <!-- jsp页面的处理， prefix路径， suffix 文件后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>


</beans>